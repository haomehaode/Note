jQuery 基础语法
    $(selector).action()       美元符号定义 jQuery选择符（selector）       "查询"和"查找" HTML 元素        jQuery 的 action() 执行对元素的操作
jQuery 选择器
    $("TagName")                jQuery 元素选择器基于元素名选取元素
    $("#test")                  jQuery #id 选择器通过 HTML 元素的 id 属性选取指定的元素
    $(".test")                  jQuery 类选择器可以通过指定的 class 查找元素
    $("*")	                    选取所有元素	    
    $(this)	                    选取当前 HTML 元素	    
    $("p.intro")	            选取 class 为 intro 的 <p> 元素	    
    $("p:first")	            选取第一个 <p> 元素	在线实例
    $("ul li:first")	        选取第一个 <ul> 元素的第一个 <li> 元素	    
    $("ul li:first-child")	    选取每个 <ul> 元素的第一个 <li> 元素	    
    $("[href]")	                选取带有 href 属性的元素	    
    $("a[target='_blank']")	    选取所有 target 属性值等于 "_blank" 的 <a> 元素	    
    $("a[target!='_blank']")	选取所有 target 属性值不等于 "_blank" 的 <a> 元素	    
    $(":button")	            选取所有 type="button" 的 <input> 元素 和 <button> 元素	    
    $("tr:even")	            选取偶数位置的 <tr> 元素	    
    $("tr:odd")	                选取奇数位置的 <tr> 元素
jQuery 事件
    click、dblclick、mouseenter、mouseleave、hover          鼠标事件
	keypress、keydown、keyup                                键盘事件		
	submit、change、focus、blur	                            表单事件
	load、resize、scroll、unload                            文档/窗口事件
jQuery 效果
    $(selector).hide(speed,callback);               隐藏
    $(selector).show(speed,callback);               显示
    $(selector).toggle();                           切换 hide() 和 show() 方法
    $(selector).fadeIn(speed,callback);             淡入已隐藏的元素
    $(selector).fadeOut(speed,callback);            用于淡出可见元素
    $(selector).fadeToggle(speed,callback);         在 fadeIn() 与 fadeOut() 方法之间进行切换
    $(selector).fadeTo(speed,opacity,callback);     允许渐变为给定的不透明度（值介于 0 与 1 之间）
    $(selector).slideDown(speed,callback);          用于向下滑动元素
    $(selector).slideUp(speed,callback);            用于向上滑动元素
    $(selector).slideToggle(speed,callback);        在 slideDown() 与 slideUp() 方法之间进行切换
    $(selector).animate({params},speed,callback);   用于创建自定义动画
    $(selector).stop(stopAll,goToEnd);              用于停止动画或效果，在它们完成之前
jQuery 获取内容和属性
    $(selector).text()                              设置或返回所选元素的文本内容
    $(selector).html()                              设置或返回所选元素的内容（包括 HTML 标记）
    $(selector).val()                               设置或返回表单字段的值
    $(selector).attr()                              设置或返回所选元素获取属性值
    $(selector).append()                            在被选元素的结尾插入内容
    $(selector).prepend()                           在被选元素的开头插入内容
    $(selector).after()                             在被选元素之后插入内容
    $(selector).before()                            在被选元素之前插入内容
    $(selector).remove()                            删除被选元素（及其子元素）
    $(selector).empty()                             从被选元素中删除子元素
    $(selector).addClass()                          向被选元素添加一个或多个类
    $(selector).removeClass()                       从被选元素删除一个或多个类
    $(selector).toggleClass()                       对被选元素进行添加/删除类的切换操作
    $(selector).css({params})                       设置或返回样式属性
    $(selector).width()                             设置或返回元素的宽度（不包括内边距、边框或外边距）
    $(selector).height()                            设置或返回元素的高度（不包括内边距、边框或外边距）
    $(selector).innerWidth()                        返回元素的宽度（包括内边距）
    $(selector).innerHeight()                       返回元素的高度（包括内边距）
    $(selector).outerWidth()                        返回元素的宽度（包括内边距和边框）
    $(selector).outerHeight()                       返回元素的高度（包括内边距和边框）
jQuery 遍历
    $(selector).parent()                            返回被选元素的直接父元素
    $(selector).parents()                           返回被选元素的所有祖先元素，它一路向上直到文档的根元素 (<html>)
    $(selector).parentsUntil()                      返回介于两个给定元素之间的所有祖先元素
    $(selector).children()                          返回被选元素的所有直接子元素
    $(selector).find()                              返回被选元素的后代元素，一路向下直到最后一个后代
    $(selector).siblings()                          返回被选元素的所有同胞元素
    $(selector).next()                              返回被选元素的下一个同胞元素                    往下
    $(selector).nextAll()                           返回被选元素的所有跟随的同胞元素                往下
    $(selector).nextUntil()                         返回介于两个给定参数之间的所有跟随的同胞元素     往下
    $(selector).prev()                              返回被选元素的下一个同胞元素                    往上
    $(selector).prevAll()                           返回被选元素的所有跟随的同胞元素                往上
    $(selector).prevUntil()                         返回介于两个给定参数之间的所有跟随的同胞元素     往上
    $(selector).first()                             返回被选元素的首个元素
    $(selector).last()                              返回被选元素的最后一个元素
    $(selector).eq()                                返回被选元素中带有指定索引号的元素
    $(selector).filter()                            允许您规定一个标准。不匹配这个标准的元素会被从集合中删除，匹配的元素会被返回
    $(selector).not()                               返回不匹配标准的所有元素
jQuery AJAX
    $(selector).load(URL,data,callback);            从服务器加载数据，并把返回的数据放入被选元素中
        callback 参数是回调函数
            esponseTxt - 包含调用成功时的结果内容   
            statusTXT - 包含调用的状态  
            xhr - 包含 XMLHttpRequest 对象
    $.get(URL,callback);                            通过 HTTP GET 请求从服务器上请求数据
    $.post(URL,data,callback);                      通过 HTTP POST 请求向服务器提交数据
        callback 参数是回调函数
            data - 存有被请求页面的内容   
            status - 存有请求的状态  
    $.noConflict();                                 会释放对 $ 标识符的控制，这样其他脚本就可以使用它，您仍然可以通过全名替代简写的方式来使用 jQuery
AJAX实例
    function(){
		$.ajax({
				url:"./callback.php",		             //请求地址
				type:"get",			                     //请求方式
			    data: {
                    loginCode: $("#loginCode").val(),
                    password: $("#password").val()
                },                                       //这里的data:发送给服务器的请求数据
				success:function(data){                  //回调函数：数据请求成功之后调用
					console.log(data);  				 //这里的data:从服务器发送回来的数据
				},
                error: function (err) {
                    console.log(err));
                }
				// dataType:"json",
				//dataType:"xml"     设置请求回来的数据格式是json还是xml.								
									//也可以在php文件里设置数据格式    header("content-type:application/json;charset=utf-8");
			})
		})
    }

